@*
    _ValidationScriptsPartial.cshtml
    Client-side validation scripts for Blood Donation Management System
*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $(document).ready(function() {

        // ============ Custom Validation Methods ============

        // Blood Group Validation
        $.validator.addMethod("validbloodgroup", function(value, element) {
            if (!value) return true; // Let required handle empty values
            var validGroups = ["A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"];
            return validGroups.includes(value.toUpperCase());
        }, "Please enter a valid blood group (A+, A-, B+, B-, AB+, AB-, O+, O-)");

        // Bangladesh Phone Number Validation
        $.validator.addMethod("bdphone", function(value, element) {
            if (!value) return true; // Let required handle empty values
            var pattern = /^(\+88)?01[3-9]\d{8}$/;
            return pattern.test(value.replace(/\s/g, ''));
        }, "Please enter a valid BD phone number (01XXXXXXXXX)");

        // Past Date Validation
        $.validator.addMethod("pastdate", function(value, element) {
            if (!value) return true;
            var today = new Date();
            today.setHours(23, 59, 59, 999); // End of today
            var inputDate = new Date(value);
            return inputDate <= today;
        }, "Date cannot be in the future");

        // Donation Interval Validation (90 days minimum)
        $.validator.addMethod("donationinterval", function(value, element) {
            if (!value) return true;
            var today = new Date();
            var lastDonation = new Date(value);
            var diffTime = Math.abs(today - lastDonation);
            var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            return diffDays >= 90;
        }, "Minimum 90 days gap required between donations");


        // ============ Apply Validation Rules ============

        // Blood Group Field
        $("input[name='BloodGroup']").rules("add", {
            required: true,
            validbloodgroup: true,
            messages: {
                required: "Blood group is required"
            }
        });

        // Contact Number Field
        $("input[name='ContactNo']").rules("add", {
            required: true,
            bdphone: true,
            messages: {
                required: "Contact number is required"
            }
        });

        // Last Donation Date Field
        $("input[name='LastDonationDate']").rules("add", {
            pastdate: true,
            donationinterval: true
        });


        // ============ UI Enhancements ============

        // Blood Group Auto-formatting
        $("input[name='BloodGroup']").on('input', function() {
            var value = $(this).val().toUpperCase();
            $(this).val(value);

            // Real-time validation
            if (value.length > 0) {
                $(this).valid();
            }
        });

        // Phone Number Formatting
        $("input[name='ContactNo']").on('input', function() {
            var value = $(this).val().replace(/\D/g, ''); // Remove non-digits
            if (value.length > 11) {
                value = value.substring(0, 11);
            }
            $(this).val(value);
        });

        // District-Thana Dependency
        $("#DistrictId").change(function() {
            var districtId = $(this).val();
            var thanaSelect = $("#ThanaId");

            // Clear thana dropdown
            thanaSelect.empty().append('<option value="">Select Thana</option>');

            if (districtId) {
                // Show loading
                thanaSelect.prop('disabled', true);

                $.ajax({
                    url: '/Donor/GetThanasByDistrict',
                    type: 'GET',
                    data: { districtId: districtId },
                    success: function(data) {
                        $.each(data, function(index, item) {
                            thanaSelect.append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                        thanaSelect.prop('disabled', false);
                    },
                    error: function() {
                        alert('Error loading thanas. Please try again.');
                        thanaSelect.prop('disabled', false);
                    }
                });
            }
        });

        // Form Submission Enhancement
        $('form').on('submit', function() {
            if ($(this).valid()) {
                var submitBtn = $(this).find('button[type="submit"]');
                submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Saving...');

                // Re-enable after 5 seconds (in case of error)
                setTimeout(function() {
                    submitBtn.prop('disabled', false).text('Save');
                }, 5000);
            }
        });

        // Real-time Validation on Blur
        $('input, select').on('blur', function() {
            $(this).valid();
        });


        // ============ Validation UI Settings ============

        $.validator.setDefaults({
            highlight: function(element) {
                $(element).addClass('is-invalid').removeClass('is-valid');
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function(element) {
                $(element).removeClass('is-invalid').addClass('is-valid');
                $(element).closest('.form-group').removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger',
            errorPlacement: function(error, element) {
                if (element.attr('type') === 'checkbox') {
                    error.insertAfter(element.closest('.form-check'));
                } else {
                    error.insertAfter(element);
                }
            }
        });


        // ============ Additional Features ============

        // Blood Group Suggestions
        var bloodGroups = ["A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"];
        $("input[name='BloodGroup']").on('focus', function() {
            var input = $(this);
            if (!input.val()) {
                input.attr('placeholder', 'e.g., A+, B-, O+, AB-');
            }
        }).on('blur', function() {
            $(this).removeAttr('placeholder');
        });

        // Contact Number Helper
        $("input[name='ContactNo']").on('focus', function() {
            var input = $(this);
            if (!input.val()) {
                input.attr('placeholder', '01XXXXXXXXX');
            }
        }).on('blur', function() {
            $(this).removeAttr('placeholder');
        });

        // Status Checkbox Enhancement
        $("input[name='Status']").change(function() {
            var label = $(this).next('label');
            if ($(this).is(':checked')) {
                label.text('Active');
                label.removeClass('text-muted').addClass('text-success');
            } else {
                label.text('Inactive');
                label.removeClass('text-success').addClass('text-muted');
            }
        });

    });
</script>

<style>
    /* Custom Validation Styles */
    .form-control.is-invalid {
        border-color: #dc3545;
        padding-right: calc(1.5em + 0.75rem);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath d='m5.8 7.2l.4-1.6L6.6 4H5.4l-.4 1.6-.4 1.6zm0 1.6v.8h1.2v-.8z'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .form-control.is-valid {
        border-color: #28a745;
        padding-right: calc(1.5em + 0.75rem);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='m2.3 6.73l.4-.4 1.4-1.4L6.7 2.3l.4.4L3.7 6.13z'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .text-danger {
        font-size: 0.875em;
        margin-top: 0.25rem;
    }

    .form-group.has-error .form-control {
        border-color: #dc3545;
    }

    .btn:disabled {
        opacity: 0.65;
        cursor: not-allowed;
    }

    /* Blood Group Field Styling */
    input[name="BloodGroup"] {
        text-transform: uppercase;
        font-weight: 600;
        color: #dc3545;
    }

    /* Status Checkbox Styling */
    .form-check-input:checked {
        background-color: #28a745;
        border-color: #28a745;
    }

    /* Loading Animation */
    .fa-spinner {
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Form Group Spacing */
    .form-group {
        margin-bottom: 1.5rem;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .form-group {
            margin-bottom: 1rem;
        }
    }
</style>